name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run tests
      run: yarn test --coverage --watchAll=false
    
    - name: Run linting
      run: yarn lint
    
    - name: Run TypeScript check
      run: yarn tsc --noEmit

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build library
      run: yarn build
    
    - name: Pack library
      run: npm pack
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: npm-package
        path: '*.tgz'

  publish-npm:
    runs-on: ubuntu-latest
    needs: [test, build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build library
      run: yarn build
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: [test, build]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: npm-package
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git tag --sort=-version:refname | head -2 | tail -1)
        CURRENT_TAG=${GITHUB_REF#refs/tags/}
        
        echo "## Changes since ${PREVIOUS_TAG}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        
        # Get commits since previous tag
        git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" >> CHANGELOG.md
        
        # Set output for use in release
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./*.tgz
        asset_name: react-native-dl-scan-${{ github.ref_name }}.tgz
        asset_content_type: application/gzip

  publish-docs:
    runs-on: ubuntu-latest
    needs: [test, build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build docs
      run: |
        mkdir -p ./docs-build
        cp -r ./docs/* ./docs-build/
        cp ./README.md ./docs-build/
        
        # Generate API docs if typedoc is available
        if command -v typedoc &> /dev/null; then
          npx typedoc --out ./docs-build/api src/index.ts
        fi
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs-build
        publish_branch: gh-pages
        enable_jekyll: false