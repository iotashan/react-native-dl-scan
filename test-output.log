
> react-native-dl-scan@0.1.0 test
> jest src/components/__tests__/ --no-coverage --verbose

watchman warning:  Recrawled this watch 55 times, most recently because:
MustScanSubDirs UserDroppedTo resolve, please review the information on
https://facebook.github.io/watchman/docs/troubleshooting.html#recrawl
To clear this warning, run:
`watchman watch-del '/Users/shan/dev/iotashan/react-native-dl-scan' ; watchman watch-project '/Users/shan/dev/iotashan/react-native-dl-scan'`

FAIL src/components/__tests__/accessibility.test.tsx
  ● Test suite failed to run

    TypeError: _Platform.default.select is not a function

      69 | jest.mock('react-native', () => {
      70 |   const RN = jest.requireActual('react-native');
    > 71 |   return {
         |   ^
      72 |     ...RN,
      73 |     AccessibilityInfo: {
      74 |       isScreenReaderEnabled: jest.fn(() => Promise.resolve(false)),

      at Object.select (node_modules/react-native/Libraries/Components/Button.js:400:20)
      at Object.require [as Button] (node_modules/react-native/index.js:47:12)
      at src/components/__tests__/accessibility.test.tsx:71:3
      at Object.require (node_modules/@testing-library/react-native/src/helpers/accessibility.ts:2:1)
      at Object.require (node_modules/@testing-library/react-native/src/matchers/to-be-busy.ts:5:1)
      at Object.require (node_modules/@testing-library/react-native/src/matchers/extend-expect.ts:1:1)
      at Object.require (node_modules/@testing-library/react-native/src/index.ts:2:1)
      at Object.require (src/components/__tests__/accessibility.test.tsx:3:1)

FAIL src/components/__tests__/CameraScanner.test.tsx
  CameraScanner
    Mode Support
      ✓ should default to auto mode (26 ms)
      ✓ should display barcode-specific instructions in barcode mode (1 ms)
      ✓ should display OCR-specific instructions in OCR mode (1 ms)
      ✓ should call onModeChange when mode changes (3 ms)
    Backward Compatibility
      ✓ should work without mode prop (legacy usage) (1 ms)
      ✓ should maintain existing props functionality (1 ms)
    Frame Processor Config
      ✓ should accept frame processor configuration (1 ms)
    Permission Handling
      ✕ should show permission denied UI when camera permission is denied (79 ms)
      ✓ should show loading state while checking permissions (6 ms)
    Device Handling
      ✓ should show error when no camera device is available (1 ms)

  ● CameraScanner › Permission Handling › should show permission denied UI when camera permission is denied

    TypeError: Cannot read properties of undefined (reading 'catch')

      233 |     // Request permission on mount if not already granted
      234 |     if (hasPermission === false) {
    > 235 |       requestPermission().catch((error) => {
          |                          ^
      236 |         logger.error('Failed to request camera permission', { error });
      237 |         onError?.(new Error('Failed to request camera permission'));
      238 |       });

      at src/components/CameraScanner.tsx:235:26
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8314:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9672:13)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/CameraScanner.test.tsx:166:35)

FAIL src/components/__tests__/GuidanceOverlay.test.tsx
  GuidanceOverlay
    Message prioritization
      ✕ should show document detection message when no document detected (34 ms)
      ✕ should show different message for OCR mode when no document detected
      ✕ should prioritize positioning issues over blur
      ✕ should show blur guidance when positioning is good
      ✕ should show lighting guidance when blur and positioning are good (1 ms)
      ✕ should show ready message when all metrics are good (1 ms)
    Visual styling
      ✕ should use red styling for high priority messages (1 ms)
      ✕ should use green styling for ready state
      ✕ should show appropriate icons for different states
    Dismiss functionality
      ✕ should show dismiss button when enabled (1 ms)
      ✕ should call onDismiss when dismiss button is pressed (62 ms)
      ✕ should not show dismiss button by default
    Additional context
      ✕ should show additional context for PDF417 mode when no document detected
      ✕ should show additional context for OCR mode when no document detected (1 ms)
    Distance-specific messaging
      ✕ should show move closer message for too_far distance
      ✕ should show move away message for too_close distance

  ● GuidanceOverlay › Message prioritization › should show document detection message when no document detected

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      42 |       };
      43 |
    > 44 |       const { getByText } = render(
         |                                   ^
      45 |         <GuidanceOverlay metrics={noDocMetrics} mode="pdf417" />
      46 |       );
      47 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:44:35)

  ● GuidanceOverlay › Message prioritization › should show different message for OCR mode when no document detected

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      66 |       };
      67 |
    > 68 |       const { getByText } = render(
         |                                   ^
      69 |         <GuidanceOverlay metrics={noDocMetrics} mode="ocr" />
      70 |       );
      71 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:68:35)

  ● GuidanceOverlay › Message prioritization › should prioritize positioning issues over blur

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      94 |       };
      95 |
    > 96 |       const { getByText } = render(
         |                                   ^
      97 |         <GuidanceOverlay metrics={poorPositionMetrics} mode="pdf417" />
      98 |       );
      99 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:96:35)

  ● GuidanceOverlay › Message prioritization › should show blur guidance when positioning is good

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      114 |       };
      115 |
    > 116 |       const { getByText } = render(
          |                                   ^
      117 |         <GuidanceOverlay metrics={poorBlurMetrics} mode="pdf417" />
      118 |       );
      119 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:116:35)

  ● GuidanceOverlay › Message prioritization › should show lighting guidance when blur and positioning are good

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      135 |       };
      136 |
    > 137 |       const { getByText } = render(
          |                                   ^
      138 |         <GuidanceOverlay metrics={poorLightingMetrics} mode="ocr" />
      139 |       );
      140 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:137:35)

  ● GuidanceOverlay › Message prioritization › should show ready message when all metrics are good

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      143 |
      144 |     it('should show ready message when all metrics are good', () => {
    > 145 |       const { getByText } = render(
          |                                   ^
      146 |         <GuidanceOverlay metrics={goodMetrics} mode="pdf417" />
      147 |       );
      148 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:145:35)

  ● GuidanceOverlay › Visual styling › should use red styling for high priority messages

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      167 |       };
      168 |
    > 169 |       const { getByText } = render(
          |                                   ^
      170 |         <GuidanceOverlay metrics={criticalMetrics} mode="pdf417" />
      171 |       );
      172 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:169:35)

  ● GuidanceOverlay › Visual styling › should use green styling for ready state

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      182 |
      183 |     it('should use green styling for ready state', () => {
    > 184 |       const { getByText } = render(
          |                                   ^
      185 |         <GuidanceOverlay metrics={goodMetrics} mode="pdf417" />
      186 |       );
      187 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:184:35)

  ● GuidanceOverlay › Visual styling › should show appropriate icons for different states

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      209 |       };
      210 |
    > 211 |       const { getByText } = render(
          |                                   ^
      212 |         <GuidanceOverlay metrics={noDocMetrics} mode="pdf417" />
      213 |       );
      214 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:211:35)

  ● GuidanceOverlay › Dismiss functionality › should show dismiss button when enabled

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      219 |   describe('Dismiss functionality', () => {
      220 |     it('should show dismiss button when enabled', () => {
    > 221 |       const { getByText } = render(
          |                                   ^
      222 |         <GuidanceOverlay
      223 |           metrics={goodMetrics}
      224 |           mode="pdf417"

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:221:35)

  ● GuidanceOverlay › Dismiss functionality › should call onDismiss when dismiss button is pressed

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      233 |       const onDismiss = jest.fn();
      234 |
    > 235 |       const { getByText } = render(
          |                                   ^
      236 |         <GuidanceOverlay
      237 |           metrics={goodMetrics}
      238 |           mode="pdf417"

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:235:35)

  ● GuidanceOverlay › Dismiss functionality › should not show dismiss button by default

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      247 |
      248 |     it('should not show dismiss button by default', () => {
    > 249 |       const { queryByText } = render(
          |                                     ^
      250 |         <GuidanceOverlay metrics={goodMetrics} mode="pdf417" />
      251 |       );
      252 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:249:37)

  ● GuidanceOverlay › Additional context › should show additional context for PDF417 mode when no document detected

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      271 |       };
      272 |
    > 273 |       const { getByText } = render(
          |                                   ^
      274 |         <GuidanceOverlay metrics={noDocMetrics} mode="pdf417" />
      275 |       );
      276 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:273:35)

  ● GuidanceOverlay › Additional context › should show additional context for OCR mode when no document detected

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      293 |       };
      294 |
    > 295 |       const { getByText } = render(
          |                                   ^
      296 |         <GuidanceOverlay metrics={noDocMetrics} mode="ocr" />
      297 |       );
      298 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:295:35)

  ● GuidanceOverlay › Distance-specific messaging › should show move closer message for too_far distance

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      317 |       };
      318 |
    > 319 |       const { getByText } = render(
          |                                   ^
      320 |         <GuidanceOverlay metrics={tooFarMetrics} mode="pdf417" />
      321 |       );
      322 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:319:35)

  ● GuidanceOverlay › Distance-specific messaging › should show move away message for too_close distance

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `GuidanceOverlay`.

      339 |       };
      340 |
    > 341 |       const { getByText } = render(
          |                                   ^
      342 |         <GuidanceOverlay metrics={tooCloseMetrics} mode="pdf417" />
      343 |       );
      344 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/GuidanceOverlay.test.tsx:341:35)

FAIL src/components/__tests__/ModeSelector.test.tsx
  ModeSelector
    ✕ renders correctly with all three modes (116 ms)
    ✕ highlights the current mode (5 ms)
    ✕ calls onModeChange when a mode is tapped (3 ms)
    ✕ provides haptic feedback on iOS when mode is selected (2 ms)
    ✕ announces mode changes for accessibility (2 ms)
    ✕ disables interaction when disabled prop is true (2 ms)
    ✕ shows description on long press (3 ms)
    ✓ maintains correct accessibility states (2 ms)
    ✕ cycles through modes correctly (2 ms)

  ● ModeSelector › renders correctly with all three modes

    Unable to find an element with text: Auto

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Auto"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      23 |     );
      24 |
    > 25 |     expect(getByText('Auto')).toBeTruthy();
         |            ^
      26 |     expect(getByText('Barcode')).toBeTruthy();
      27 |     expect(getByText('OCR')).toBeTruthy();
      28 |     expect(getByLabelText('Mode selector, current mode is Auto')).toBeTruthy();

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:25:12)

  ● ModeSelector › highlights the current mode

    Unable to find an element with text: Barcode

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Barcode"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      35 |
      36 |     // The current mode should have different styling (verified by snapshot or visual inspection)
    > 37 |     const barcodeButton = getByText('Barcode');
         |                           ^
      38 |     expect(barcodeButton).toBeTruthy();
      39 |
      40 |     // Re-render with different mode

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:37:27)

  ● ModeSelector › calls onModeChange when a mode is tapped

    Unable to find an element with text: Barcode

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Auto"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      51 |     );
      52 |
    > 53 |     fireEvent.press(getByText('Barcode'));
         |                     ^
      54 |     expect(mockOnModeChange).toHaveBeenCalledWith('barcode');
      55 |
      56 |     fireEvent.press(getByText('OCR'));

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:53:21)

  ● ModeSelector › provides haptic feedback on iOS when mode is selected

    Unable to find an element with text: Barcode

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Auto"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      67 |     );
      68 |
    > 69 |     fireEvent.press(getByText('Barcode'));
         |                     ^
      70 |     expect(Vibration.vibrate).toHaveBeenCalledWith(10);
      71 |
      72 |     Platform.OS = originalPlatform;

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:69:21)

  ● ModeSelector › announces mode changes for accessibility

    Unable to find an element with text: OCR

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Auto"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      78 |     );
      79 |
    > 80 |     fireEvent.press(getByText('OCR'));
         |                     ^
      81 |     expect(AccessibilityInfo.announceForAccessibility).toHaveBeenCalledWith(
      82 |       'Switched to OCR mode. Text recognition for front of license'
      83 |     );

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:80:21)

  ● ModeSelector › disables interaction when disabled prop is true

    Unable to find an element with text: Barcode

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Auto"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": true,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": true,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": true,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      93 |     );
      94 |
    > 95 |     fireEvent.press(getByText('Barcode'));
         |                     ^
      96 |     expect(mockOnModeChange).not.toHaveBeenCalled();
      97 |   });
      98 |

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:95:21)

  ● ModeSelector › shows description on long press

    Unable to find an element with text: Auto

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Auto"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      108 |
      109 |     // Long press
    > 110 |     fireEvent(getByText('Auto'), 'onLongPress');
          |               ^
      111 |
      112 |     // Fast forward timers
      113 |     act(() => {

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:110:15)

  ● ModeSelector › cycles through modes correctly

    Unable to find an element with text: Barcode

    [36m<View>[39m
      [36m<View[39m
        [33maccessibilityHint[39m=[32m"Swipe left or right to change scanning mode"[39m
        [33maccessibilityLabel[39m=[32m"Mode selector, current mode is Auto"[39m
        [33maccessibilityRole[39m=[32m"adjustable"[39m
      [36m>[39m
        [36m<View />[39m
        [36m<Animated.View />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Automatically selects best method"[39m
            [33maccessibilityLabel[39m=[32m"Auto mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mA[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mAuto[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Fast PDF417 barcode scanning"[39m
            [33maccessibilityLabel[39m=[32m"Barcode mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
                [36m<View />[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mBarcode[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityHint[39m=[32m"Text recognition for front of license"[39m
            [33maccessibilityLabel[39m=[32m"OCR mode"[39m
            [33maccessibilityRole[39m=[32m"button"[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
                "selected": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
          [36m>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<Text>[39m
                  [0mT[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Animated.Text>[39m
                [0mOCR[0m
              [36m</Animated.Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      158 |
      159 |     // Click through all modes
    > 160 |     fireEvent.press(getByText('Barcode'));
          |                     ^
      161 |     expect(mockOnModeChange).toHaveBeenCalledWith('barcode');
      162 |
      163 |     rerender(

      at Object.getByText (src/components/__tests__/ModeSelector.test.tsx:160:21)

FAIL src/components/__tests__/QualityIndicator.enhanced.test.tsx
  QualityIndicator Enhanced Features
    Real-time metrics interface
      ✕ should render with real-time metrics (26 ms)
      ✕ should show proper guidance for poor positioning (1 ms)
      ✕ should show different guidance for OCR mode (1 ms)
    Legacy metrics interface
      ✕ should render with legacy metrics (1 ms)
      ✕ should show proper guidance for poor legacy metrics
    Haptic feedback
      ✕ should trigger haptic feedback on status change (1 ms)
      ✕ should not trigger haptic feedback when disabled (5 ms)
    Accessibility announcements
      ✕ should announce status changes for accessibility
    Visual feedback
      ✕ should render quality bars for detailed view
      ✕ should render compact view when specified (1 ms)
    Mode-specific behavior
      ✕ should prioritize lighting warnings for OCR mode
      ✕ should prioritize blur warnings for PDF417 mode

  ● QualityIndicator Enhanced Features › Real-time metrics interface › should render with real-time metrics

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      39 |   describe('Real-time metrics interface', () => {
      40 |     it('should render with real-time metrics', () => {
    > 41 |       const { getByText } = render(
         |                                   ^
      42 |         <QualityIndicator metrics={mockRealTimeMetrics} />
      43 |       );
      44 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:41:35)

  ● QualityIndicator Enhanced Features › Real-time metrics interface › should show proper guidance for poor positioning

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      61 |       };
      62 |
    > 63 |       const { getByText } = render(
         |                                   ^
      64 |         <QualityIndicator metrics={poorPositioningMetrics} mode="pdf417" />
      65 |       );
      66 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:63:35)

  ● QualityIndicator Enhanced Features › Real-time metrics interface › should show different guidance for OCR mode

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      82 |       };
      83 |
    > 84 |       const { getByText } = render(
         |                                   ^
      85 |         <QualityIndicator metrics={poorLightingMetrics} mode="ocr" />
      86 |       );
      87 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:84:35)

  ● QualityIndicator Enhanced Features › Legacy metrics interface › should render with legacy metrics

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      92 |   describe('Legacy metrics interface', () => {
      93 |     it('should render with legacy metrics', () => {
    > 94 |       const { getByText } = render(
         |                                   ^
      95 |         <QualityIndicator metrics={legacyMetrics} />
      96 |       );
      97 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:94:35)

  ● QualityIndicator Enhanced Features › Legacy metrics interface › should show proper guidance for poor legacy metrics

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      106 |       };
      107 |
    > 108 |       const { getByText } = render(
          |                                   ^
      109 |         <QualityIndicator metrics={poorLegacyMetrics} />
      110 |       );
      111 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:108:35)

  ● QualityIndicator Enhanced Features › Haptic feedback › should trigger haptic feedback on status change

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      116 |   describe('Haptic feedback', () => {
      117 |     it('should trigger haptic feedback on status change', async () => {
    > 118 |       const { rerender } = render(
          |                                  ^
      119 |         <QualityIndicator
      120 |           metrics={mockRealTimeMetrics}
      121 |           enableHapticFeedback={true}

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:118:34)

  ● QualityIndicator Enhanced Features › Haptic feedback › should not trigger haptic feedback when disabled

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      146 |
      147 |     it('should not trigger haptic feedback when disabled', async () => {
    > 148 |       const { rerender } = render(
          |                                  ^
      149 |         <QualityIndicator
      150 |           metrics={mockRealTimeMetrics}
      151 |           enableHapticFeedback={false}

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:148:34)

  ● QualityIndicator Enhanced Features › Accessibility announcements › should announce status changes for accessibility

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      181 |   describe('Accessibility announcements', () => {
      182 |     it('should announce status changes for accessibility', async () => {
    > 183 |       const { rerender } = render(
          |                                  ^
      184 |         <QualityIndicator
      185 |           metrics={mockRealTimeMetrics}
      186 |           enableAccessibilityAnnouncements={true}

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:183:34)

  ● QualityIndicator Enhanced Features › Visual feedback › should render quality bars for detailed view

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      216 |   describe('Visual feedback', () => {
      217 |     it('should render quality bars for detailed view', () => {
    > 218 |       const { getByText } = render(
          |                                   ^
      219 |         <QualityIndicator
      220 |           metrics={mockRealTimeMetrics}
      221 |           showDetails={true}

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:218:35)

  ● QualityIndicator Enhanced Features › Visual feedback › should render compact view when specified

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      230 |
      231 |     it('should render compact view when specified', () => {
    > 232 |       const { queryByText } = render(
          |                                     ^
      233 |         <QualityIndicator metrics={mockRealTimeMetrics} compact={true} />
      234 |       );
      235 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:232:37)

  ● QualityIndicator Enhanced Features › Mode-specific behavior › should prioritize lighting warnings for OCR mode

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      259 |       };
      260 |
    > 261 |       const { getByText } = render(
          |                                   ^
      262 |         <QualityIndicator metrics={warningMetrics} mode="ocr" />
      263 |       );
      264 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:261:35)

  ● QualityIndicator Enhanced Features › Mode-specific behavior › should prioritize blur warnings for PDF417 mode

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

    Check the render method of `QualityIndicator`.

      284 |       };
      285 |
    > 286 |       const { getByText } = render(
          |                                   ^
      287 |         <QualityIndicator metrics={warningMetrics} mode="pdf417" />
      288 |       );
      289 |

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5649:7)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10925:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:31:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:13:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:69:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/__tests__/QualityIndicator.enhanced.test.tsx:286:35)

FAIL src/components/__tests__/ScanningOverlay.test.tsx
  ScanningOverlay
    ✕ renders correctly in auto mode (9 ms)
    ✓ renders correctly in barcode mode (2 ms)
    ✓ renders correctly in OCR mode (1 ms)
    ✓ displays custom instruction text (2 ms)
    ✕ renders in landscape orientation (4 ms)
    ✓ hides guides when showGuides is false (1 ms)
    ✕ renders success state correctly (1 ms)
    ✕ renders error state correctly (1 ms)
    ✓ calls onOverlayPress when pressed (1 ms)
  ScanningOverlay animations
    ✓ starts pulse animation when scanning (1 ms)
    ✕ shows sweep line in barcode mode when scanning (2 ms)

  ● ScanningOverlay › renders correctly in auto mode

    expect(received).toMatchSnapshot()

    Snapshot name: `ScanningOverlay renders correctly in auto mode 1`

    - Snapshot  - 5
    + Received  + 5

    @@ -34,11 +34,11 @@
          />
          <View
            style={
              {
                "flexDirection": "row",
    -           "height": 401.448362720403,
    +           "height": 100.36209068010075,
              }
            }
          >
            <View
              style={
    @@ -53,12 +53,12 @@
                [
                  {
                    "backgroundColor": "transparent",
                  },
                  {
    -               "height": 401.448362720403,
    -               "width": 637.5,
    +               "height": 100.36209068010075,
    +               "width": 159.375,
                  },
                ]
              }
            />
            <View
    @@ -87,12 +87,12 @@
                "alignItems": "center",
                "justifyContent": "center",
                "position": "absolute",
              },
              {
    -           "height": 401.448362720403,
    -           "width": 637.5,
    +           "height": 100.36209068010075,
    +           "width": 159.375,
              },
              {
                "transform": [
                  {
                    "scale": 1,

      19 |   it('renders correctly in auto mode', () => {
      20 |     const { toJSON } = render(<ScanningOverlay {...defaultProps} />);
    > 21 |     expect(toJSON()).toMatchSnapshot();
         |                      ^
      22 |   });
      23 |
      24 |   it('renders correctly in barcode mode', () => {

      at Object.toMatchSnapshot (src/components/__tests__/ScanningOverlay.test.tsx:21:22)

  ● ScanningOverlay › renders in landscape orientation

    expect(received).toMatchSnapshot()

    Snapshot name: `ScanningOverlay renders in landscape orientation 1`

    - Snapshot  - 5
    + Received  + 5

    @@ -34,11 +34,11 @@
          />
          <View
            style={
              {
                "flexDirection": "row",
    -           "height": 401.448362720403,
    +           "height": 100.36209068010075,
              }
            }
          >
            <View
              style={
    @@ -53,12 +53,12 @@
                [
                  {
                    "backgroundColor": "transparent",
                  },
                  {
    -               "height": 637.5,
    -               "width": 401.448362720403,
    +               "height": 159.375,
    +               "width": 100.36209068010075,
                  },
                ]
              }
            />
            <View
    @@ -87,12 +87,12 @@
                "alignItems": "center",
                "justifyContent": "center",
                "position": "absolute",
              },
              {
    -           "height": 637.5,
    -           "width": 401.448362720403,
    +           "height": 159.375,
    +           "width": 100.36209068010075,
              },
              {
                "transform": [
                  {
                    "scale": 1,

      48 |       <ScanningOverlay {...defaultProps} orientation="landscape" />
      49 |     );
    > 50 |     expect(toJSON()).toMatchSnapshot();
         |                      ^
      51 |   });
      52 |
      53 |   it('hides guides when showGuides is false', () => {

      at Object.toMatchSnapshot (src/components/__tests__/ScanningOverlay.test.tsx:50:22)

  ● ScanningOverlay › renders success state correctly

    expect(received).toMatchSnapshot()

    Snapshot name: `ScanningOverlay renders success state correctly 1`

    - Snapshot  - 5
    + Received  + 5

    @@ -34,11 +34,11 @@
          />
          <View
            style={
              {
                "flexDirection": "row",
    -           "height": 401.448362720403,
    +           "height": 100.36209068010075,
              }
            }
          >
            <View
              style={
    @@ -53,12 +53,12 @@
                [
                  {
                    "backgroundColor": "transparent",
                  },
                  {
    -               "height": 401.448362720403,
    -               "width": 637.5,
    +               "height": 100.36209068010075,
    +               "width": 159.375,
                  },
                ]
              }
            />
            <View
    @@ -87,12 +87,12 @@
                "alignItems": "center",
                "justifyContent": "center",
                "position": "absolute",
              },
              {
    -           "height": 401.448362720403,
    -           "width": 637.5,
    +           "height": 100.36209068010075,
    +           "width": 159.375,
              },
              {
                "transform": [
                  {
                    "scale": 1,

      67 |       />
      68 |     );
    > 69 |     expect(toJSON()).toMatchSnapshot();
         |                      ^
      70 |   });
      71 |
      72 |   it('renders error state correctly', () => {

      at Object.toMatchSnapshot (src/components/__tests__/ScanningOverlay.test.tsx:69:22)

  ● ScanningOverlay › renders error state correctly

    expect(received).toMatchSnapshot()

    Snapshot name: `ScanningOverlay renders error state correctly 1`

    - Snapshot  - 5
    + Received  + 5

    @@ -34,11 +34,11 @@
          />
          <View
            style={
              {
                "flexDirection": "row",
    -           "height": 401.448362720403,
    +           "height": 100.36209068010075,
              }
            }
          >
            <View
              style={
    @@ -53,12 +53,12 @@
                [
                  {
                    "backgroundColor": "transparent",
                  },
                  {
    -               "height": 401.448362720403,
    -               "width": 637.5,
    +               "height": 100.36209068010075,
    +               "width": 159.375,
                  },
                ]
              }
            />
            <View
    @@ -87,12 +87,12 @@
                "alignItems": "center",
                "justifyContent": "center",
                "position": "absolute",
              },
              {
    -           "height": 401.448362720403,
    -           "width": 637.5,
    +           "height": 100.36209068010075,
    +           "width": 159.375,
              },
              {
                "transform": [
                  {
                    "scale": 1,

      78 |       />
      79 |     );
    > 80 |     expect(toJSON()).toMatchSnapshot();
         |                      ^
      81 |   });
      82 |
      83 |   it('calls onOverlayPress when pressed', () => {

      at Object.toMatchSnapshot (src/components/__tests__/ScanningOverlay.test.tsx:80:22)

  ● ScanningOverlay animations › shows sweep line in barcode mode when scanning

    expect(received).toMatchSnapshot()

    Snapshot name: `ScanningOverlay animations shows sweep line in barcode mode when scanning 1`

    - Snapshot  - 8
    + Received  + 8

    @@ -34,11 +34,11 @@
          />
          <View
            style={
              {
                "flexDirection": "row",
    -           "height": 401.448362720403,
    +           "height": 100.36209068010075,
              }
            }
          >
            <View
              style={
    @@ -53,13 +53,13 @@
                [
                  {
                    "backgroundColor": "transparent",
                  },
                  {
    -               "height": 120.4345088161209,
    -               "marginBottom": 281.0138539042821,
    -               "width": 637.5,
    +               "height": 30.108627204030224,
    +               "marginBottom": 70.25346347607052,
    +               "width": 159.375,
                  },
                ]
              }
            />
            <View
    @@ -88,13 +88,13 @@
                "alignItems": "center",
                "justifyContent": "center",
                "position": "absolute",
              },
              {
    -           "height": 120.4345088161209,
    -           "marginBottom": 281.0138539042821,
    -           "width": 637.5,
    +           "height": 30.108627204030224,
    +           "marginBottom": 70.25346347607052,
    +           "width": 159.375,
              },
              {
                "transform": [
                  {
                    "scale": 1,
    @@ -277,11 +277,11 @@
        <View
          style={
            {
              "paddingHorizontal": 40,
              "position": "absolute",
    -         "top": 125,
    +         "top": 68.75,
            }
          }
        >
          <Text
            style={

      109 |       <ScanningOverlay {...defaultProps} mode="barcode" isScanning={true} />
      110 |     );
    > 111 |     expect(toJSON()).toMatchSnapshot();
          |                      ^
      112 |   });
      113 | });
      114 |

      at Object.toMatchSnapshot (src/components/__tests__/ScanningOverlay.test.tsx:111:22)

 › 5 snapshots failed.
Snapshot Summary
 › 5 snapshots failed from 1 test suite. Inspect your code changes or run `npm test -- -u` to update them.

Test Suites: 6 failed, 6 total
Tests:       42 failed, 16 passed, 58 total
Snapshots:   5 failed, 5 total
Time:        0.894 s, estimated 2 s
Ran all test suites matching /src\/components\/__tests__\//i.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
